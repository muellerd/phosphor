{"version":3,"file":"static/css/main.b0edd2ba.css","mappings":"AAII,UAKA,cALA,2DAGA,eAEA,kBAGA,wCAMA,CATA,wBACA,sCASA,WADA,WCbS,CDcT,QAUA,CAVA,wBAKJ,2BAIA,CATI,oEAUA,WACA,iCAEA,sCAEI,sEE/BJ,sBAEI,mBADA,sBDAK,CCIT,sBACI,kBCDJ,sCAEI,kCAEA,kBACA,CACA,wCAFA,cACA,oCACA,2CAKA,qEAKA,kBAIJ,gFAII,kBACA,CACA,qCAFA,cACA,oCACA,4CClCR,+BACI,GACI,WAGJ,IACI,YAGJ,IACI,aAGJ,IACI,cAGJ,IACI,eAGJ,IACI,gBAGJ,IACI,iBAGJ,IACI,kBAGJ,IACI,mBAGJ,IACI,oBAGJ,GACI,YA1CR,uBACI,GACI,WAGJ,IACI,YAGJ,IACI,aAGJ,IACI,cAGJ,IACI,eAGJ,IACI,gBAGJ,IACI,iBAGJ,IACI,kBAGJ,IACI,mBAGJ,IACI,oBAGJ,GACI,YCtCA,8BAEI,gGADA,UACA,CAIR,kBACI,eAOJ,4CACI,0BAGJ,mBACI,uBAGJ,oBACI,wBAGJ,kBACI,sBAGJ,mBACI,uBAGJ,kBACI,sBAGJ,uBACI,2BAGJ,sBACI,0BAGJ,sBACI,0BAGJ,sBACI,0BAGJ,sBACI,0BAGJ,qBACI,yBAGJ,eACI,mBAGJ,sBACI,0BAGJ,iBACI,qBCxEJ,yBAII,8FAFA,wBLDK,CKEL,aLFK,CKAL,WAGA,CAGJ,mBACI,yBAIR,yBACI,GACE,mBAFN,iBACI,GACE,mBAGJ,mCACE,GACE,mBCdF,wCAEI,sCAEA,kBACA,CACA,wCAFA,cACA,oCACA,2CAKA,uEAKA,uDCxBR,WACI,gBCGA,iBAEA,CAHJ,eACI,CDFA,uNCIA,YAMA,2BACI,cACA,CALJ,aACA,MRNS,CQGT,cAEA,CACA,MADA,WAKI,qBAMA,gCAEA,CALA,sBADA,cACA,CAKA,oCAMR,CAXQ,8CACA,+BAUR,uBAEI,oDC5BJ,eAGI,SACA,OAoDI,gBAlDJ,oBALA,eAIA,QAHA,KAIA,CAoDI,2CAII,WAFA,cACA,oBAEA,kBAIJ,sBAnBI,oFAyBA,kBTvEC,CSqED,WAGA,WAJA,WAEA,kBAxBA,CAgCJ,qBAtCQ,sCA4CJ,iFAKA,yBARA,SACA,OAFA,QADA,MAIA,kBA3CI,CAuDZ,4BACI,GACI,+EAFR,oBACI,GACI,+EAKR,6BACI,GACI,2BAFR,qBACI,GACI","sources":["components/Phosphor/style.scss","assets/sass/_colors.scss","components/Teletype/style.scss","components/Link/style.scss","assets/sass/_progressbar.scss","components/Bitmap/style.scss","components/Prompt/style.scss","components/Toggle/style.scss","assets/sass/_fonts.scss","components/Modal/style.scss","components/Scanlines/style.scss"],"sourcesContent":["@import \"../../assets/sass/fonts\";\n@import \"../../assets/sass/colors\";\n\nhtml, body {\n    font-family: $font-family;\n    font-size: $fontsize;\n    line-height: $lineheight;\n    color: $foreground;\n\n    user-select: none;\n    text-shadow: $foreground-glow;\n\n    height: 100%;\n    margin: 0;\n}\n\nbody {\n    margin: 0;\n    background: $background;\n    background-image: $background-gradient;\n    background-attachment: fixed;\n    height: 100%;\n}\n\n.phosphor {\n    padding: $lineheight;\n}\n\n.alert {\n    color: $alert;\n    text-shadow: $alert-glow;\n\n    & > span.cursor {\n        color: $alert;\n        background-color: rgba($alert, 0.75);\n    }\n}","// default: black bg, blue/white fg\n\n// TODO: add theme mixins\n// blue/white\n$foreground: rgb(212, 249, 250);\n$background: rgb(0, 12, 12);\n$alert: rgb(255, 60, 0);\n\n// amber\n// $foreground: rgb(224, 125, 11);\n// $background: rgb(8, 4, 0);\n// $alert: rgb(255, 60, 0);\n\n// green\n// $foreground: rgb(36, 161, 20);\n// $background: rgb(0, 2, 0);\n// $alert: rgb(255, 60, 0);\n\n// white\n// $foreground: rgb(218, 218, 218);\n// $background: rgb(2, 2, 2);\n// $alert: rgb(255, 60, 0);\n\n$scanlines-foreground: rgba($foreground, 0.1);\n$scanlines-background: rgba($background, 0.5);\n\n$foreground-glow: 0 0 5px rgba($foreground, 0.5);\n$background-glow: 0 0 2px rgba($background, 0.5);\n$alert-glow: 0 0 5px rgba($alert, 0.5);\n\n$background-gradient: radial-gradient(rgba($foreground, 0.15), rgba($background, 1) 100%)","@import \"../../assets/sass/colors\";\n\n.__teletype__ {\n    .cursor {\n        color: rgba($background, 0.2);\n        background: $foreground;\n    }\n\n    .hidden {\n        visibility: hidden;\n    }\n}","@import \"../../assets/sass/fonts\";\n@import \"../../assets/sass/colors\";\n\n.__link__ {\n    & {\n        cursor: pointer;\n        display: block;\n    }\n    &:hover,\n    &:active {\n        color: $background;\n        background: $foreground;\n        text-shadow: $background-glow;\n        box-shadow: $foreground-glow;\n        transition:  background 50ms, foreground 150ms;\n    }\n\n    &:hover {\n        opacity: 1;\n        transition: background 50ms, foreground 150ms;\n    }\n\n    &:active {\n        opacity: 0.5;\n        transition: opacity 50ms;\n    }\n\n    // alert class\n    &.alert:hover,\n    &.alert:active {\n        color: $background;\n        background: $alert;\n        text-shadow: $background-glow;\n        box-shadow: $alert-glow;\n        transition:  background 50ms, foreground 150ms;\n    }\n}","@keyframes loadingdots {\n    0% {\n        content: \"\";\n    }\n\n    10% {\n        content: \".\";\n    }\n\n    20% {\n        content: \"..\";\n    }\n\n    30% {\n        content: \"...\";\n    }\n\n    40% {\n        content: \"....\";\n    }\n\n    50% {\n        content: \".....\";\n    }\n\n    60% {\n        content: \"......\";\n    }\n\n    70% {\n        content: \".......\";\n    }\n\n    80% {\n        content: \"........\";\n    }\n\n    90% {\n        content: \".........\";\n    }\n\n    100% {\n        content: \"\";\n    }\n}","@import \"../../assets/sass/progressbar\";\n\n.__image__ {\n    .progressbar {\n        &::after {\n            content: \"\";\n            animation: loadingdots 1.5s ease-in infinite;\n        }\n    }\n\n    canvas {\n        max-width: 100%;\n    }\n\n    &.monochrome {\n        mix-blend-mode: luminosity;\n    }\n\n    &.luminosity {\n        mix-blend-mode: luminosity;\n    }\n\n    &.lighten {\n        mix-blend-mode: lighten;\n    }\n\n    &.multiply {\n        mix-blend-mode: multiply;\n    }\n\n    &.screen {\n        mix-blend-mode: screen;\n    }\n\n    &.overlay {\n        mix-blend-mode: overlay;\n    }\n\n    &.darken {\n        mix-blend-mode: darken;\n    }\n\n    &.color-dodge {\n        mix-blend-mode: color-dodge;\n    }\n\n    &.color-burn {\n        mix-blend-mode: color-burn;\n    }\n\n    &.hard-light {\n        mix-blend-mode: hard-light;\n    }\n\n    &.soft-light {\n        mix-blend-mode: soft-light;\n    }\n\n    &.difference {\n        mix-blend-mode: difference;\n    }\n\n    &.exclusion {\n        mix-blend-mode: exclusion;\n    }\n\n    &.hue {\n        mix-blend-mode: hue;\n    }\n\n    &.saturation {\n        mix-blend-mode: saturation;\n    }\n\n    &.color {\n        mix-blend-mode: color;\n    }\n}","@import \"../../assets/sass/colors\";\n\n.__prompt__ {\n    &.cursor::after {\n        content: \"|\";\n        background-color: $foreground;\n        color: $foreground;\n        animation: blink 1s steps(5, start) infinite;\n    }\n\n    .input {\n        text-transform: uppercase;\n    }\n}\n\n@keyframes blink {\n    to {\n      visibility: hidden;\n    }\n  }\n  @-webkit-keyframes blink-animation {\n    to {\n      visibility: hidden;\n    }\n  }","@import \"../../assets/sass/fonts\";\n@import \"../../assets/sass/colors\";\n\n.__toggle__ {\n    & {\n        cursor: pointer;\n        display: block;\n    }\n    &:hover,\n    &:active {\n        color: $background;\n        background: $foreground;\n        text-shadow: $background-glow;\n        box-shadow: $foreground-glow;\n        transition:  background 50ms, foreground 150ms;\n    }\n\n    &:hover {\n        opacity: 1;\n        transition: background 50ms, foreground 150ms;\n    }\n\n    &:active {\n        opacity: 0.5;\n        transition: opacity 50ms;\n    }\n}","@font-face {\n    font-family: \"Vga\";\n    src: url(\"../fonts/vga.woff\") format(\"woff\"),\n        url(\"../fonts/vga.woff2\") format(\"woff2\"),\n        url(\"../fonts/vga.ttf\") format(\"truetype\");\n    font-weight: normal;\n    font-style: normal;\n}\n\n// TODO: add theme mixins\n$font-family: \"Vga\", Menlo, Monaco, Consolas, \"Courier New\", monospace;\n\n$scalefactor: 2.0;\n// the following values are font-dependant\n\n$fontsize: 24px * $scalefactor;\n$lineheight: 19px * $scalefactor;","@import \"../../assets/sass/fonts\";\n@import \"../../assets/sass/colors\";\n\n.__modal__ {\n    position: fixed;\n    height: 100vh;\n    width: 100vw;\n    top: 0;\n    left: 0;\n    background: rgba($background, 0.8);\n    color: $foreground;\n\n    .content {\n        position: fixed;\n        top: 50%;\n        left: 50%;\n        padding: $lineheight * 0.5;\n        transform: translate(-50%, -50%);\n        background: $foreground;\n        color: $background;\n        text-shadow: $background-glow;\n\n        p {\n            margin: 0;\n        }\n    }\n}\n\nbody.static {\n    height: 100vh;\n    overflow-y: hidden;\n}","@import \"../../assets/sass/colors\";\n\n.__scanlines__ {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    pointer-events: none;\n}\n\n/* REGULAR SCANLINES SETTINGS */\n\n    // width of 1 scanline (min.: 1px)\n    $scan-width: 1px;\n\n    // emulates a damage-your-eyes bad pre-2000 CRT screen â™¥ (true, false)\n    $scan-crt: false;\n\n    // frames-per-second (should be > 1), only applies if $scan-crt: true;\n    $scan-fps: 60;\n\n    // scanline-color (rgba)\n    $scan-color: $scanlines-foreground;\n    $scan-background: $scanlines-background;\n\n    // set z-index on 2147483648 or more to enable scanlines on Chrome fullscreen (doesn't work in Firefox or IE);\n    $scan-z-index: 2147483648;\n\n/* MOVING SCANLINE SETTINGS */\n\n    // moving scanline (true, false)\n    $scan-moving-line: true;\n\n    // opacity of the moving scanline\n    $scan-opacity: 1;\n\n/* MIXINS */\n\n    // apply CRT animation: @include scan-crt($scan-crt);\n    @mixin scan-crt($scan-crt) {\n        @if $scan-crt == true {\n            animation: scanlines 1s steps($scan-fps) infinite;\n        }\n        @else { animation: none; }\n    }\n\n    // apply CRT animation: @include scan-crt($scan-crt);\n    @mixin scan-moving($scan-moving-line) {\n        @if $scan-moving-line == true {\n            animation: scanline 6s linear infinite;\n        }\n        @else { animation: none; }\n    }\n\n/* CSS .scanlines CLASS */\n\n    .__scanlines__ {\n        overflow: hidden; // only to animate the unique scanline\n\n        &:before,\n        &:after {\n            display: block;\n            pointer-events: none;\n            content: '';\n            position: absolute;\n        }\n\n        // unique scanline travelling on the screen\n        &:before {\n            // position: absolute;\n            // bottom: 100%;\n            width: 100%;\n            height: $scan-width * 1;\n            z-index: $scan-z-index + 1;\n            background: $foreground;\n            opacity: 0.2;\n            // animation: scanline 6s linear infinite;\n            @include scan-moving($scan-moving-line);\n        }\n\n        // the scanlines, so!\n        &:after {\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            z-index: $scan-z-index;\n            background: linear-gradient(\n                to bottom,\n                $scan-background 50%,\n                $scan-color 51%\n            );\n            background-size: 100% $scan-width*2;\n            @include scan-crt($scan-crt);\n        }\n    }\n\n/* ANIMATE UNIQUE SCANLINE */\n    @keyframes scanline {\n        0% {\n            transform: translate3d(0,200000%,0);\n            // bottom: 0%; // to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }\n        }\n    }\n\n    @keyframes scanlines {\n        0% {\n            background-position: 0 50%;\n            // bottom: 0%; // to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }\n        }\n    }"],"names":[],"sourceRoot":""}